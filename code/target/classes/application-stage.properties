
#--------------------------
#Spring boot endpoint setup
#--------------------------
#Enable shutdown end point
management.endpoint.shutdown.enabled=${app.endpoints.shutdown.enabled}
#Exposed endpoint
management.endpoints.web.exposure.include=${app.endpoints.web.expose}
#Possible values: ALWAYS WHEN_AUTHORIZED, NEVER (default)
management.endpoint.health.show-details=${app.endpoints.health.show-details}

#---------------------
#DataBase Access Setup
#---------------------
spring.datasource.url = ${datasource.url}
spring.datasource.username = ${datasource.username}
spring.datasource.password = ${datasource.password}
spring.datasource.driver-class-name= ${datasource.driver.class.name}

app.client.id=application-client
app.client.secret=application-secret

#---------------------
#DataBase Access Setup
#---------------------
spring.datasource.name=${spring.datasource.name}

#----------------------------
#Hikari connection pool setup
#----------------------------
#default databse schema 
#spring.datasource.hikari.schema=${est.spring.datasource.schema}
#number of ms to wait before throwing an exception if no connection is available
spring.datasource.hikari.connection-timeout=${spring.datasource.connection-timeout}
#this property controls th maximum size that the pool is allowed to reach, include both idle and in-use connection
spring.datasource.hikari.maximum-pool-size=${spring.datasource.maximum-pool}

#-------------------
#JPA/Hibernate setup
#-------------------
#Open session in view set as disabled
#true = to allow for lazy loading in web views
spring.jpa.open-in-view=false
#show or not log for each sql query
spring.jpa.show-sql=${spring.jpa.show.sql}
#Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=${spring.jpa.properties.hibernate.dialect}

#show sql log files
spring.jpa.properties.hibernate.show-sql=${spring.jpa.properties.hibernate.show.sql}
spring.jpa.properties.hibernate.use_sql_comments=${spring.jpa.properties.hibernate.use.sql.comments}
spring.jpa.properties.hibernate.format_sql=${spring.jpa.properties.hibernate.format.sql}
spring.jpa.properties.hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext

#------------------------------------
#While lable error file configuration
#------------------------------------
server.error.whitelabel.enabled=false

#------------------------------------
#Logging Set Up
#------------------------------------
#Maximum of archive log files to keep
logging.logback.rollingpolicy.max-history=10
#Maximum log file size
logging.logback.rollingpolicy.max-file-size=5MB

#------------------
#Building Metadata
#------------------
build.artifact="ms-auth"
build.name="project.name@"
build.description="Spring Boot Auth Server"
build.version="0.0.1"

#----------------------------------------
#Deployment info exposed through actuator
#----------------------------------------
info.artifact="ms-auth"
info.name="ms-auth"
info.description="Spring Boot Auth Server"
info.version="0.0.1"

#----------------------------------------
#OpenAPI Swagger Details
#----------------------------------------
springdoc.swagger-ui.path=/openapi/swagger-ui.html
springdoc.api-docs.path=/openapi/v3/api-docs
springdoc.packagesToScan=com.user.authentication.controller
springdoc.pathsToMatch=/**

#----------------------------------------
#Mail Details
#----------------------------------------
#Common Properties
spring.mail.host=${mail.host}
spring.mail.port=${mail.port}
spring.mail.username=${mail.username}
spring.mail.password=${mail.password}

# Other properties
spring.mail.properties.mail.smtp.auth=${mail.properties.mail.smtp.auth}
spring.mail.properties.mail.smtp.connectiontimeout=${mail.properties.mail.smtp.connectiontimeout}
spring.mail.properties.mail.smtp.timeout=${mail.properties.mail.smtp.timeout}
spring.mail.properties.mail.smtp.writetimeout=${mail.properties.mail.smtp.writetimeout}

# TLS , port 587
spring.mail.properties.mail.smtp.starttls.enable=${mail.properties.mail.smtp.starttls.enable}

